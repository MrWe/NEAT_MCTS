1. Find available actions for genome: Perform each available mutation.
    - Find possible places to add connections -> nodes with no connection between them
    - Find places to add nodes -> Can split all connections
    - Make copy of parent with each of these actions done? All all to children-array of parent?
2. Select next state
3. Simulate: Perform random mutations/neuroevolution k number of times. 
4. Backpropagation



Ideas for local search for nodes in tree: 
    - Beam search / Hill climb for each node in tree -> Do for every genome in while(not genome.extended)?
    - Run NEAT for each node -> create multiple copies of same node, run NEAT on weights only

How to prune MCTS tree?




Weights are evolved through beam search now, how to do evolution on it?

-> 